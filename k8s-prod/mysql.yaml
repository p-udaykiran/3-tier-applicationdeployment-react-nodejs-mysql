---
# -------------------------------
# 1️⃣ Secret: Store MySQL root password securely
# -------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: webapps           # Namespace where Secret resides
  labels:
    app: mysql
type: Opaque                  # Generic secret type
stringData:
  MYSQL_ROOT_PASSWORD: uday123 # Root password for MySQL container

---
# -------------------------------
# 2️⃣ ConfigMap: Store MySQL database name
# -------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: webapps
  labels:
    app: mysql
data:
  MYSQL_DATABASE: crud_app    # Database name to be created inside MySQL

---
# -------------------------------
# 3️⃣ ConfigMap: MySQL initialization SQL script
# -------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
  namespace: webapps
  labels:
    app: mysql
data:
  init.sql: |
    -- Create database if it doesn't exist
    CREATE DATABASE IF NOT EXISTS crud_app;

    USE crud_app;

    -- Create users table with required columns
    CREATE TABLE IF NOT EXISTS users (
      id INT AUTO_INCREMENT PRIMARY KEY,
      name VARCHAR(255) NOT NULL,
      email VARCHAR(255) NOT NULL UNIQUE,
      password VARCHAR(255) NOT NULL,
      role ENUM('admin', 'viewer') NOT NULL DEFAULT 'viewer',
      is_active TINYINT(1) DEFAULT 1,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

---
# -------------------------------
# 4️⃣ Service: Headless service for StatefulSet
# -------------------------------
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: webapps
  labels:
    app: mysql
spec:
  clusterIP: None             # Headless service; no load balancer
  selector:
    app: mysql                # Selects pods labeled 'app=mysql'
  ports:
    - port: 3306
      targetPort: 3306        # Expose MySQL default port

---
# -------------------------------
# 5️⃣ StatefulSet: Deploy MySQL pods with persistent storage
# -------------------------------
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: webapps
  labels:
    app: mysql
spec:
  serviceName: mysql         # Must match the headless service name
  replicas: 1               # Number of MySQL pods
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8    # MySQL 8 container image
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: MYSQL_DATABASE
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql         # Persist MySQL data
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d # Mount SQL init scripts
      volumes:
        - name: initdb
          configMap:
            name: mysql-initdb-config          # Mount initialization SQL script
  volumeClaimTemplates:
    - metadata:
        name: mysql-persistent-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]      # Single pod can read/write
        storageClassName: ebs-sc              # Storage class for dynamic provisioning
        resources:
          requests:
            storage: 5Gi                      # Request 5GB per pod
